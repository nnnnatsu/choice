import streamlit as st

# Define the criteria with associated scores
criteria = {
    'ЁЯМбя╕Пр╣Др╕Вр╣Йр╕Хр╣Ир╕│ (>37.5)': {'P': 1, 'B': 1, 'C': 1},
    'ЁЯМбя╕Пр╣Др╕Вр╣Йр╕кр╕╣р╕З (>38.5)': {'P': 3, 'B': 1, 'C': 2},
    'ЁЯШотАНЁЯТир╣Др╕нр╣Бр╕лр╣Йр╕З': {'P': 1, 'B': 0, 'C': 1},
    'ЁЯШотАНЁЯТир╣Др╕нр╕бр╕╡р╣Ар╕кр╕бр╕лр╕░': {'P': 2, 'B': 3, 'C': 1},
    'ЁЯШотАНЁЯТир╣Др╕нр╕бр╕▓р╕Б': {'P': 0, 'B': 2, 'C': 0},
    'ЁЯШотАНЁЯТир╣Др╕нр╕Щр╕▓р╕Щр╕Бр╕зр╣Ир╕▓ 2 р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М': {'P': 0, 'B': 2, 'C': 0},
    'ЁЯСГр╕лр╕▓р╕вр╣Гр╕Ир╕ер╕│р╕Ър╕▓р╕Б': {'P': 3, 'B': 2, 'C': 1},
    'ЁЯСГр╕Ир╕бр╕╣р╕Бр╣Др╕бр╣Ир╕гр╕▒р╕Ър╕гр╕к': {'P': 0, 'B': 0, 'C': 3},
    'ЁЯСГр╕бр╕╡р╕Щр╣Йр╕│р╕бр╕╣р╕Б': {'P': 0, 'B': 0, 'C': 2},
    'ЁЯЧгя╕Пр╣Ар╕Ир╣Зр╕Ър╕Др╕н': {'P': 0, 'B': 2, 'C': 3},
    'ЁЯЧгя╕Пр╣Бр╕кр╕Ър╕Др╕н': {'P': 0, 'B': 1, 'C': 0},
    'ЁЯЪ╜р╕Цр╣Ир╕▓р╕вр╣Ар╕лр╕ер╕з (р╣Ар╕Бр╕┤р╕Щ2-3р╕зр╕▒р╕Щ)': {'P': 0, 'B': 0, 'C': 3},
    'ЁЯШ╖р╕нр╣Ир╕нр╕Щр╣Ар╕Юр╕ер╕╡р╕в р╕нр╣Ир╕нр╕Щр╣Бр╕гр╕З р╕лр╕Щр╕▓р╕зр╕кр╕▒р╣Ир╕Щ': {'P': 1, 'B': 1, 'C': 1},
    'ЁЯШ╖р╣Ар╕лр╕Щр╕╖р╣Ир╕нр╕вр╕Зр╣Ир╕▓р╕в': {'P': 0, 'B': 1, 'C': 0},
    'ЁЯж┤р╣Ар╕Ир╣Зр╕Ър╕лр╕Щр╣Йр╕▓р╕нр╕Бр╣Ар╕зр╕ер╕▓р╣Др╕н/р╕лр╕▓р╕вр╣Гр╕И': {'P': 3, 'B': 0, 'C': 0},
    'ЁЯж┤р╣Бр╕Щр╣Ир╕Щр╕лр╕Щр╣Йр╕▓р╕нр╕Б': {'P': 0, 'B': 2, 'C': 1},
    'тЪая╕ПЁЯС┤ЁЯП╝р╕нр╕▓р╕вр╕╕р╕Щр╣Йр╕нр╕вр╕Бр╕зр╣Ир╕▓5р╕Ыр╕╡р╕лр╕гр╕╖р╕нр╕бр╕▓р╕Бр╕Бр╕зр╣Ир╕▓ 65 р╕Ыр╕╡': {'P': 1, 'B': 0, 'C': 0},
    'тЪая╕ПЁЯЪмр╕кр╕╣р╕Ър╕Ър╕╕р╕лр╕гр╕╡р╣И': {'P': 1, 'B': 3, 'C': 0},
    'тЪая╕ПЁЯдТр╣Вр╕гр╕Др╕лр╕╖р╕Ф': {'P': 1, 'B': 1, 'C': 0},
    'р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╣Ар╕кр╕╡р╣Ир╕вр╕З: р╕Др╕Щр╕гр╕нр╕Ър╕Хр╕▒р╕зр╕Ыр╣Ир╕зр╕вр╣Ар╕Ыр╣Зр╕Щр╣Вр╕гр╕Др╕Ыр╕нр╕Фр╕Ър╕зр╕б ': {'P': 2, 'B': 0, 'C': 0},
    'р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╣Ар╕кр╕╡р╣Ир╕вр╕З: р╕Др╕Щр╕гр╕нр╕Ър╕Хр╕▒р╕зр╕Ыр╣Ир╕зр╕вр╣Ар╕Ыр╣Зр╕Щр╣Вр╕гр╕Др╕лр╕ер╕нр╕Фр╕ер╕бр╕нр╕▒р╕Бр╣Ар╕кр╕Ъ ': {'P': 0, 'B': 1, 'C': 0},
    'р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╣Ар╕кр╕╡р╣Ир╕вр╕З: р╕Др╕Щр╕гр╕нр╕Ър╕Хр╕▒р╕зр╕Ыр╣Ир╕зр╕вр╣Ар╕Ыр╣Зр╕Щр╣Вр╕гр╕Др╣Вр╕Др╣Вр╕гр╕Щр╣Ир╕▓р╣Др╕зр╕гр╕▒р╕к ': {'P': 0, 'B': 0, 'C': 3},
}

# Display the options with custom formatting
selected_criteria = st.multiselect(
    'р╣Ар╕ер╕╖р╕нр╕Бр╕нр╕▓р╕Бр╕▓р╕г',
    options=list(criteria.keys()),
    format_func=lambda x: x,
)

# Calculate scores
scores = {'P': 0, 'B': 0, 'C': 0}
for symptom in selected_criteria:
    for disease, score in criteria[symptom].items():
        scores[disease] += score

# Display results
if st.button('р╕кр╣Ир╕З'):
    st.markdown('---')
    st.write(f"р╕Др╕░р╣Бр╕Щр╕Щр╕Вр╕нр╕Зр╣Вр╕гр╕Др╕Ыр╕нр╕Фр╕Ър╕зр╕б (P): {scores['P']}")
    st.write(f"р╕Др╕░р╣Бр╕Щр╕Щр╕Вр╕нр╕Зр╣Вр╕гр╕Др╕лр╕ер╕нр╕Фр╕ер╕бр╕нр╕▒р╕Бр╣Ар╕кр╕Ъ (B): {scores['B']}")
    st.write(f"р╕Др╕░р╣Бр╕Щр╕Щр╕Вр╕нр╕З COVID-19 (C): {scores['C']}")

    max_score = max(scores.values())
    if max_score < 5:
        st.write("р╕Др╕зр╕▓р╕бр╣Ар╕кр╕╡р╣Ир╕вр╕Зр╕Хр╣Ир╕│")
    else:
        risk_disease = max(scores, key=scores.get)
        risk_name = {'P': 'р╕Ыр╕нр╕Фр╕Ър╕зр╕б', 'B': 'р╕лр╕ер╕нр╕Фр╕ер╕бр╕нр╕▒р╕Бр╣Ар╕кр╕Ъ', 'C': 'COVID-19'}
        st.write(f"р╕Др╕зр╕▓р╕бр╣Ар╕кр╕╡р╣Ир╕вр╕Зр╣Ар╕Ыр╣Зр╕Щр╣Вр╕гр╕Д: {risk_name[risk_disease]}")
